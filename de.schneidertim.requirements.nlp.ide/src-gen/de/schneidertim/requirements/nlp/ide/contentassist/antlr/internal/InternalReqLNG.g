/*
 * generated by Xtext 2.10.0
 */
grammar InternalReqLNG;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.schneidertim.requirements.nlp.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.schneidertim.requirements.nlp.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.schneidertim.requirements.nlp.services.ReqLNGGrammarAccess;

}
@parser::members {
	private ReqLNGGrammarAccess grammarAccess;

	public void setGrammarAccess(ReqLNGGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEntities
entryRuleEntities
:
{ before(grammarAccess.getEntitiesRule()); }
	 ruleEntities
{ after(grammarAccess.getEntitiesRule()); } 
	 EOF 
;

// Rule Entities
ruleEntities 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntitiesAccess().getGroup()); }
		(rule__Entities__Group__0)
		{ after(grammarAccess.getEntitiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActor
entryRuleActor
:
{ before(grammarAccess.getActorRule()); }
	 ruleActor
{ after(grammarAccess.getActorRule()); } 
	 EOF 
;

// Rule Actor
ruleActor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorAccess().getGroup()); }
		(rule__Actor__Group__0)
		{ after(grammarAccess.getActorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystem
entryRuleSystem
:
{ before(grammarAccess.getSystemRule()); }
	 ruleSystem
{ after(grammarAccess.getSystemRule()); } 
	 EOF 
;

// Rule System
ruleSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemAccess().getGroup()); }
		(rule__System__Group__0)
		{ after(grammarAccess.getSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTextAccess().getAlternatives()); }
			(rule__Text__Alternatives)
			{ after(grammarAccess.getTextAccess().getAlternatives()); }
		)
		(
			{ before(grammarAccess.getTextAccess().getAlternatives()); }
			(rule__Text__Alternatives)*
			{ after(grammarAccess.getTextAccess().getAlternatives()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSentenceWithReferences
entryRuleSentenceWithReferences
:
{ before(grammarAccess.getSentenceWithReferencesRule()); }
	 ruleSentenceWithReferences
{ after(grammarAccess.getSentenceWithReferencesRule()); } 
	 EOF 
;

// Rule SentenceWithReferences
ruleSentenceWithReferences 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSentenceWithReferencesAccess().getGroup()); }
		(rule__SentenceWithReferences__Group__0)
		{ after(grammarAccess.getSentenceWithReferencesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextWithReferences
entryRuleTextWithReferences
:
{ before(grammarAccess.getTextWithReferencesRule()); }
	 ruleTextWithReferences
{ after(grammarAccess.getTextWithReferencesRule()); } 
	 EOF 
;

// Rule TextWithReferences
ruleTextWithReferences 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getAlternatives()); }
		(rule__TextWithReferences__Alternatives)
		{ after(grammarAccess.getTextWithReferencesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceCombination
entryRuleReferenceCombination
:
{ before(grammarAccess.getReferenceCombinationRule()); }
	 ruleReferenceCombination
{ after(grammarAccess.getReferenceCombinationRule()); } 
	 EOF 
;

// Rule ReferenceCombination
ruleReferenceCombination 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceCombinationAccess().getGroup()); }
		(rule__ReferenceCombination__Group__0)
		{ after(grammarAccess.getReferenceCombinationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequirement
entryRuleRequirement
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequirementAccess().getAlternatives()); }
		(rule__Requirement__Alternatives)
		{ after(grammarAccess.getRequirementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalRequirement
entryRuleConditionalRequirement
:
{ before(grammarAccess.getConditionalRequirementRule()); }
	 ruleConditionalRequirement
{ after(grammarAccess.getConditionalRequirementRule()); } 
	 EOF 
;

// Rule ConditionalRequirement
ruleConditionalRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalRequirementAccess().getGroup()); }
		(rule__ConditionalRequirement__Group__0)
		{ after(grammarAccess.getConditionalRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnconditionalRequirement
entryRuleUnconditionalRequirement
:
{ before(grammarAccess.getUnconditionalRequirementRule()); }
	 ruleUnconditionalRequirement
{ after(grammarAccess.getUnconditionalRequirementRule()); } 
	 EOF 
;

// Rule UnconditionalRequirement
ruleUnconditionalRequirement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnconditionalRequirementAccess().getGroup()); }
		(rule__UnconditionalRequirement__Group__0)
		{ after(grammarAccess.getUnconditionalRequirementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrecondition
entryRulePrecondition
:
{ before(grammarAccess.getPreconditionRule()); }
	 rulePrecondition
{ after(grammarAccess.getPreconditionRule()); } 
	 EOF 
;

// Rule Precondition
rulePrecondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreconditionAccess().getGroup()); }
		(rule__Precondition__Group__0)
		{ after(grammarAccess.getPreconditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional
entryRuleConditional
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAccess().getIfKeyword()); }
		'If'
		{ after(grammarAccess.getConditionalAccess().getIfKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActorInteraction
entryRuleActorInteraction
:
{ before(grammarAccess.getActorInteractionRule()); }
	 ruleActorInteraction
{ after(grammarAccess.getActorInteractionRule()); } 
	 EOF 
;

// Rule ActorInteraction
ruleActorInteraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorInteractionAccess().getGroup()); }
		(rule__ActorInteraction__Group__0)
		{ after(grammarAccess.getActorInteractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequirementEnd
entryRuleRequirementEnd
:
{ before(grammarAccess.getRequirementEndRule()); }
	 ruleRequirementEnd
{ after(grammarAccess.getRequirementEndRule()); } 
	 EOF 
;

// Rule RequirementEnd
ruleRequirementEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequirementEndAccess().getGroup()); }
		(rule__RequirementEnd__Group__0)
		{ after(grammarAccess.getRequirementEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextWithConceptsOrSynonyms
entryRuleTextWithConceptsOrSynonyms
:
{ before(grammarAccess.getTextWithConceptsOrSynonymsRule()); }
	 ruleTextWithConceptsOrSynonyms
{ after(grammarAccess.getTextWithConceptsOrSynonymsRule()); } 
	 EOF 
;

// Rule TextWithConceptsOrSynonyms
ruleTextWithConceptsOrSynonyms 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getAlternatives()); }
		(rule__TextWithConceptsOrSynonyms__Alternatives)
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConceptCombination
entryRuleConceptCombination
:
{ before(grammarAccess.getConceptCombinationRule()); }
	 ruleConceptCombination
{ after(grammarAccess.getConceptCombinationRule()); } 
	 EOF 
;

// Rule ConceptCombination
ruleConceptCombination 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConceptCombinationAccess().getGroup()); }
		(rule__ConceptCombination__Group__0)
		{ after(grammarAccess.getConceptCombinationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlossary
entryRuleGlossary
:
{ before(grammarAccess.getGlossaryRule()); }
	 ruleGlossary
{ after(grammarAccess.getGlossaryRule()); } 
	 EOF 
;

// Rule Glossary
ruleGlossary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlossaryAccess().getGroup()); }
		(rule__Glossary__Group__0)
		{ after(grammarAccess.getGlossaryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcept
entryRuleConcept
:
{ before(grammarAccess.getConceptRule()); }
	 ruleConcept
{ after(grammarAccess.getConceptRule()); } 
	 EOF 
;

// Rule Concept
ruleConcept 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConceptAccess().getAlternatives()); }
		(rule__Concept__Alternatives)
		{ after(grammarAccess.getConceptAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainObject
entryRuleDomainObject
:
{ before(grammarAccess.getDomainObjectRule()); }
	 ruleDomainObject
{ after(grammarAccess.getDomainObjectRule()); } 
	 EOF 
;

// Rule DomainObject
ruleDomainObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainObjectAccess().getGroup()); }
		(rule__DomainObject__Group__0)
		{ after(grammarAccess.getDomainObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionSynonym
entryRuleFunctionSynonym
:
{ before(grammarAccess.getFunctionSynonymRule()); }
	 ruleFunctionSynonym
{ after(grammarAccess.getFunctionSynonymRule()); } 
	 EOF 
;

// Rule FunctionSynonym
ruleFunctionSynonym 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionSynonymAccess().getNameAssignment()); }
		(rule__FunctionSynonym__NameAssignment)
		{ after(grammarAccess.getFunctionSynonymAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainObjectSynonym
entryRuleDomainObjectSynonym
:
{ before(grammarAccess.getDomainObjectSynonymRule()); }
	 ruleDomainObjectSynonym
{ after(grammarAccess.getDomainObjectSynonymRule()); } 
	 EOF 
;

// Rule DomainObjectSynonym
ruleDomainObjectSynonym 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainObjectSynonymAccess().getNameAssignment()); }
		(rule__DomainObjectSynonym__NameAssignment)
		{ after(grammarAccess.getDomainObjectSynonymAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Liability
ruleLiability
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiabilityAccess().getAlternatives()); }
		(rule__Liability__Alternatives)
		{ after(grammarAccess.getLiabilityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitiesAccess().getActorAssignment_0_0()); }
		(rule__Entities__ActorAssignment_0_0)
		{ after(grammarAccess.getEntitiesAccess().getActorAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntitiesAccess().getSystemAssignment_0_1()); }
		(rule__Entities__SystemAssignment_0_1)
		{ after(grammarAccess.getEntitiesAccess().getSystemAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getEntitiesAccess().getRequirementAssignment_0_2()); }
		(rule__Entities__RequirementAssignment_0_2)
		{ after(grammarAccess.getEntitiesAccess().getRequirementAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getToKeyword_0()); }
		'To'
		{ after(grammarAccess.getTextAccess().getToKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getToKeyword_1()); }
		'to'
		{ after(grammarAccess.getTextAccess().getToKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getAKeyword_2()); }
		'A'
		{ after(grammarAccess.getTextAccess().getAKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getAKeyword_3()); }
		'a'
		{ after(grammarAccess.getTextAccess().getAKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getTheKeyword_4()); }
		'the'
		{ after(grammarAccess.getTextAccess().getTheKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getTheKeyword_5()); }
		'The'
		{ after(grammarAccess.getTextAccess().getTheKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getWORDTerminalRuleCall_6()); }
		RULE_WORD
		{ after(grammarAccess.getTextAccess().getWORDTerminalRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_7()); }
		RULE_ANY_OTHER
		{ after(grammarAccess.getTextAccess().getANY_OTHERTerminalRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceWithReferences__PunctuationAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceWithReferencesAccess().getPunctuationFullStopKeyword_1_0_0()); }
		'.'
		{ after(grammarAccess.getSentenceWithReferencesAccess().getPunctuationFullStopKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceWithReferencesAccess().getPunctuationExclamationMarkKeyword_1_0_1()); }
		'!'
		{ after(grammarAccess.getSentenceWithReferencesAccess().getPunctuationExclamationMarkKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSentenceWithReferencesAccess().getPunctuationQuestionMarkKeyword_1_0_2()); }
		'?'
		{ after(grammarAccess.getSentenceWithReferencesAccess().getPunctuationQuestionMarkKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getTextWithReferencesAccess().getOnlyRefsAssignment_0()); }
			(rule__TextWithReferences__OnlyRefsAssignment_0)
			{ after(grammarAccess.getTextWithReferencesAccess().getOnlyRefsAssignment_0()); }
		)
		(
			{ before(grammarAccess.getTextWithReferencesAccess().getOnlyRefsAssignment_0()); }
			(rule__TextWithReferences__OnlyRefsAssignment_0)*
			{ after(grammarAccess.getTextWithReferencesAccess().getOnlyRefsAssignment_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getGroup_1()); }
		(rule__TextWithReferences__Group_1__0)
		{ after(grammarAccess.getTextWithReferencesAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementAccess().getConditionalRequirementParserRuleCall_0()); }
		ruleConditionalRequirement
		{ after(grammarAccess.getRequirementAccess().getConditionalRequirementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequirementAccess().getUnconditionalRequirementParserRuleCall_1()); }
		ruleUnconditionalRequirement
		{ after(grammarAccess.getRequirementAccess().getUnconditionalRequirementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsAssignment_0()); }
			(rule__TextWithConceptsOrSynonyms__OnlyRefsAssignment_0)
			{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsAssignment_0()); }
		)
		(
			{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsAssignment_0()); }
			(rule__TextWithConceptsOrSynonyms__OnlyRefsAssignment_0)*
			{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsAssignment_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getGroup_1()); }
		(rule__TextWithConceptsOrSynonyms__Group_1__0)
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concept__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConceptAccess().getFunctionParserRuleCall_0()); }
		ruleFunction
		{ after(grammarAccess.getConceptAccess().getFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConceptAccess().getDomainObjectParserRuleCall_1()); }
		ruleDomainObject
		{ after(grammarAccess.getConceptAccess().getDomainObjectParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Liability__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiabilityAccess().getShallEnumLiteralDeclaration_0()); }
		('shall')
		{ after(grammarAccess.getLiabilityAccess().getShallEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiabilityAccess().getShouldEnumLiteralDeclaration_1()); }
		('should')
		{ after(grammarAccess.getLiabilityAccess().getShouldEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiabilityAccess().getWillEnumLiteralDeclaration_2()); }
		('will')
		{ after(grammarAccess.getLiabilityAccess().getWillEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entities__Group__0__Impl
	rule__Entities__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitiesAccess().getAlternatives_0()); }
	(rule__Entities__Alternatives_0)*
	{ after(grammarAccess.getEntitiesAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entities__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitiesAccess().getGlossaryAssignment_1()); }
	(rule__Entities__GlossaryAssignment_1)
	{ after(grammarAccess.getEntitiesAccess().getGlossaryAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__0__Impl
	rule__Actor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getActorKeyword_0()); }
	'Actor'
	{ after(grammarAccess.getActorAccess().getActorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__1__Impl
	rule__Actor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getActorAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__2__Impl
	rule__Actor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getNameAssignment_2()); }
	(rule__Actor__NameAssignment_2)
	{ after(grammarAccess.getActorAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorAccess().getDescriptionAssignment_3()); }
	(rule__Actor__DescriptionAssignment_3)
	{ after(grammarAccess.getActorAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__System__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__0__Impl
	rule__System__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
	'System'
	{ after(grammarAccess.getSystemAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__1__Impl
	rule__System__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSystemAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__2__Impl
	rule__System__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getNameAssignment_2()); }
	(rule__System__NameAssignment_2)
	{ after(grammarAccess.getSystemAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__System__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__System__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemAccess().getDescriptionAssignment_3()); }
	(rule__System__DescriptionAssignment_3)
	{ after(grammarAccess.getSystemAccess().getDescriptionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
	'Description'
	{ after(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
	rule__Description__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDescriptionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDescriptionAccess().getTextAssignment_2()); }
		(rule__Description__TextAssignment_2)
		{ after(grammarAccess.getDescriptionAccess().getTextAssignment_2()); }
	)
	(
		{ before(grammarAccess.getDescriptionAccess().getTextAssignment_2()); }
		(rule__Description__TextAssignment_2)*
		{ after(grammarAccess.getDescriptionAccess().getTextAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SentenceWithReferences__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentenceWithReferences__Group__0__Impl
	rule__SentenceWithReferences__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceWithReferences__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentenceWithReferencesAccess().getTextWithReferencesAssignment_0()); }
	(rule__SentenceWithReferences__TextWithReferencesAssignment_0)
	{ after(grammarAccess.getSentenceWithReferencesAccess().getTextWithReferencesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceWithReferences__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SentenceWithReferences__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceWithReferences__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSentenceWithReferencesAccess().getPunctuationAssignment_1()); }
	(rule__SentenceWithReferences__PunctuationAssignment_1)
	{ after(grammarAccess.getSentenceWithReferencesAccess().getPunctuationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextWithReferences__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithReferences__Group_1__0__Impl
	rule__TextWithReferences__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithReferencesAccess().getRefBeforeAssignment_1_0()); }
	(rule__TextWithReferences__RefBeforeAssignment_1_0)*
	{ after(grammarAccess.getTextWithReferencesAccess().getRefBeforeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithReferences__Group_1__1__Impl
	rule__TextWithReferences__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithReferencesAccess().getTextAssignment_1_1()); }
	(rule__TextWithReferences__TextAssignment_1_1)
	{ after(grammarAccess.getTextWithReferencesAccess().getTextAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithReferences__Group_1__2__Impl
	rule__TextWithReferences__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithReferencesAccess().getAfterAssignment_1_2()); }
	(rule__TextWithReferences__AfterAssignment_1_2)*
	{ after(grammarAccess.getTextWithReferencesAccess().getAfterAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithReferences__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithReferencesAccess().getFinalRefAssignment_1_3()); }
	(rule__TextWithReferences__FinalRefAssignment_1_3)*
	{ after(grammarAccess.getTextWithReferencesAccess().getFinalRefAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceCombination__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceCombination__Group__0__Impl
	rule__ReferenceCombination__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCombination__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getReferenceCombinationAccess().getRefsAssignment_0()); }
		(rule__ReferenceCombination__RefsAssignment_0)
		{ after(grammarAccess.getReferenceCombinationAccess().getRefsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getReferenceCombinationAccess().getRefsAssignment_0()); }
		(rule__ReferenceCombination__RefsAssignment_0)*
		{ after(grammarAccess.getReferenceCombinationAccess().getRefsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCombination__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReferenceCombination__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCombination__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceCombinationAccess().getTextAssignment_1()); }
	(rule__ReferenceCombination__TextAssignment_1)
	{ after(grammarAccess.getReferenceCombinationAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRequirement__Group__0__Impl
	rule__ConditionalRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRequirementAccess().getConditionAssignment_0()); }
	(rule__ConditionalRequirement__ConditionAssignment_0)?
	{ after(grammarAccess.getConditionalRequirementAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRequirement__Group__1__Impl
	rule__ConditionalRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRequirementAccess().getSystemAssignment_1()); }
	(rule__ConditionalRequirement__SystemAssignment_1)
	{ after(grammarAccess.getConditionalRequirementAccess().getSystemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRequirement__Group__2__Impl
	rule__ConditionalRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRequirementAccess().getLiabilityAssignment_2()); }
	(rule__ConditionalRequirement__LiabilityAssignment_2)
	{ after(grammarAccess.getConditionalRequirementAccess().getLiabilityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRequirement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRequirementAccess().getEndAssignment_3()); }
	(rule__ConditionalRequirement__EndAssignment_3)
	{ after(grammarAccess.getConditionalRequirementAccess().getEndAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnconditionalRequirement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconditionalRequirement__Group__0__Impl
	rule__UnconditionalRequirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconditionalRequirementAccess().getTheAssignment_0()); }
	(rule__UnconditionalRequirement__TheAssignment_0)
	{ after(grammarAccess.getUnconditionalRequirementAccess().getTheAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconditionalRequirement__Group__1__Impl
	rule__UnconditionalRequirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconditionalRequirementAccess().getSystemAssignment_1()); }
	(rule__UnconditionalRequirement__SystemAssignment_1)
	{ after(grammarAccess.getUnconditionalRequirementAccess().getSystemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconditionalRequirement__Group__2__Impl
	rule__UnconditionalRequirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconditionalRequirementAccess().getLiabilityAssignment_2()); }
	(rule__UnconditionalRequirement__LiabilityAssignment_2)
	{ after(grammarAccess.getUnconditionalRequirementAccess().getLiabilityAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnconditionalRequirement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnconditionalRequirementAccess().getEndAssignment_3()); }
	(rule__UnconditionalRequirement__EndAssignment_3)
	{ after(grammarAccess.getUnconditionalRequirementAccess().getEndAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__0__Impl
	rule__Precondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getConditionalAssignment_0()); }
	(rule__Precondition__ConditionalAssignment_0)
	{ after(grammarAccess.getPreconditionAccess().getConditionalAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreconditionAccess().getConditionAssignment_1()); }
	(rule__Precondition__ConditionAssignment_1)
	{ after(grammarAccess.getPreconditionAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorInteraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__0__Impl
	rule__ActorInteraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getProvideAssignment_0()); }
	(rule__ActorInteraction__ProvideAssignment_0)
	{ after(grammarAccess.getActorInteractionAccess().getProvideAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__1__Impl
	rule__ActorInteraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getThe1Assignment_1()); }
	(rule__ActorInteraction__The1Assignment_1)?
	{ after(grammarAccess.getActorInteractionAccess().getThe1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__2__Impl
	rule__ActorInteraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getActorAssignment_2()); }
	(rule__ActorInteraction__ActorAssignment_2)
	{ after(grammarAccess.getActorInteractionAccess().getActorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__3__Impl
	rule__ActorInteraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getWithAssignment_3()); }
	(rule__ActorInteraction__WithAssignment_3)
	{ after(grammarAccess.getActorInteractionAccess().getWithAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__4__Impl
	rule__ActorInteraction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getThe2Assignment_4()); }
	(rule__ActorInteraction__The2Assignment_4)
	{ after(grammarAccess.getActorInteractionAccess().getThe2Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__5__Impl
	rule__ActorInteraction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getAbilityAssignment_5()); }
	(rule__ActorInteraction__AbilityAssignment_5)
	{ after(grammarAccess.getActorInteractionAccess().getAbilityAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorInteraction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorInteractionAccess().getToAssignment_6()); }
	(rule__ActorInteraction__ToAssignment_6)
	{ after(grammarAccess.getActorInteractionAccess().getToAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementEnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementEnd__Group__0__Impl
	rule__RequirementEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementEndAccess().getAiAssignment_0()); }
	(rule__RequirementEnd__AiAssignment_0)?
	{ after(grammarAccess.getRequirementEndAccess().getAiAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementEnd__Group__1__Impl
	rule__RequirementEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementEndAccess().getObjectWithDetailsAssignment_1()); }
	(rule__RequirementEnd__ObjectWithDetailsAssignment_1)
	{ after(grammarAccess.getRequirementEndAccess().getObjectWithDetailsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RequirementEnd__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequirementEndAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getRequirementEndAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TextWithConceptsOrSynonyms__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithConceptsOrSynonyms__Group_1__0__Impl
	rule__TextWithConceptsOrSynonyms__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getRefBeforeAssignment_1_0()); }
	(rule__TextWithConceptsOrSynonyms__RefBeforeAssignment_1_0)*
	{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getRefBeforeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithConceptsOrSynonyms__Group_1__1__Impl
	rule__TextWithConceptsOrSynonyms__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getTextAssignment_1_1()); }
	(rule__TextWithConceptsOrSynonyms__TextAssignment_1_1)
	{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getTextAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithConceptsOrSynonyms__Group_1__2__Impl
	rule__TextWithConceptsOrSynonyms__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getAfterAssignment_1_2()); }
	(rule__TextWithConceptsOrSynonyms__AfterAssignment_1_2)*
	{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getAfterAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TextWithConceptsOrSynonyms__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getFinalRefAssignment_1_3()); }
	(rule__TextWithConceptsOrSynonyms__FinalRefAssignment_1_3)*
	{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getFinalRefAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConceptCombination__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConceptCombination__Group__0__Impl
	rule__ConceptCombination__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConceptCombination__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConceptCombinationAccess().getConceptsAssignment_0()); }
		(rule__ConceptCombination__ConceptsAssignment_0)
		{ after(grammarAccess.getConceptCombinationAccess().getConceptsAssignment_0()); }
	)
	(
		{ before(grammarAccess.getConceptCombinationAccess().getConceptsAssignment_0()); }
		(rule__ConceptCombination__ConceptsAssignment_0)*
		{ after(grammarAccess.getConceptCombinationAccess().getConceptsAssignment_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConceptCombination__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConceptCombination__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConceptCombination__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConceptCombinationAccess().getTextAssignment_1()); }
	(rule__ConceptCombination__TextAssignment_1)
	{ after(grammarAccess.getConceptCombinationAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Glossary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Glossary__Group__0__Impl
	rule__Glossary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlossaryAccess().getGlossaryAction_0()); }
	()
	{ after(grammarAccess.getGlossaryAccess().getGlossaryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Glossary__Group__1__Impl
	rule__Glossary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlossaryAccess().getGlossaryKeyword_1()); }
	'Glossary'
	{ after(grammarAccess.getGlossaryAccess().getGlossaryKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Glossary__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlossaryAccess().getConceptsAssignment_2()); }
	(rule__Glossary__ConceptsAssignment_2)*
	{ after(grammarAccess.getGlossaryAccess().getConceptsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'Function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_2()); }
	(rule__Function__NameAssignment_2)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_4()); }
	(rule__Function__Group_4__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSynonymsKeyword_3_0()); }
	'Synonyms'
	{ after(grammarAccess.getFunctionAccess().getSynonymsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
	rule__Function__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__2__Impl
	rule__Function__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSynonymsAssignment_3_2()); }
	(rule__Function__SynonymsAssignment_3_2)
	{ after(grammarAccess.getFunctionAccess().getSynonymsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_3()); }
	(rule__Function__Group_3_3__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_3__0__Impl
	rule__Function__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getSynonymsAssignment_3_3_1()); }
	(rule__Function__SynonymsAssignment_3_3_1)
	{ after(grammarAccess.getFunctionAccess().getSynonymsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__0__Impl
	rule__Function__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDescriptionKeyword_4_0()); }
	'Description'
	{ after(grammarAccess.getFunctionAccess().getDescriptionKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__1__Impl
	rule__Function__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDescriptionAssignment_4_2()); }
	(rule__Function__DescriptionAssignment_4_2)*
	{ after(grammarAccess.getFunctionAccess().getDescriptionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group__0__Impl
	rule__DomainObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getObjectKeyword_0()); }
	'Object'
	{ after(grammarAccess.getDomainObjectAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group__1__Impl
	rule__DomainObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDomainObjectAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group__2__Impl
	rule__DomainObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getNameAssignment_2()); }
	(rule__DomainObject__NameAssignment_2)
	{ after(grammarAccess.getDomainObjectAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group__3__Impl
	rule__DomainObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getGroup_3()); }
	(rule__DomainObject__Group_3__0)?
	{ after(grammarAccess.getDomainObjectAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getGroup_4()); }
	(rule__DomainObject__Group_4__0)?
	{ after(grammarAccess.getDomainObjectAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_3__0__Impl
	rule__DomainObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getSynonymsKeyword_3_0()); }
	'Synonyms'
	{ after(grammarAccess.getDomainObjectAccess().getSynonymsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_3__1__Impl
	rule__DomainObject__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getDomainObjectAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_3__2__Impl
	rule__DomainObject__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getSynonymsAssignment_3_2()); }
	(rule__DomainObject__SynonymsAssignment_3_2)
	{ after(grammarAccess.getDomainObjectAccess().getSynonymsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getGroup_3_3()); }
	(rule__DomainObject__Group_3_3__0)*
	{ after(grammarAccess.getDomainObjectAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_3_3__0__Impl
	rule__DomainObject__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getDomainObjectAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getSynonymsAssignment_3_3_1()); }
	(rule__DomainObject__SynonymsAssignment_3_3_1)
	{ after(grammarAccess.getDomainObjectAccess().getSynonymsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainObject__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_4__0__Impl
	rule__DomainObject__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getDescriptionKeyword_4_0()); }
	'Description'
	{ after(grammarAccess.getDomainObjectAccess().getDescriptionKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_4__1__Impl
	rule__DomainObject__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainObjectAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getDomainObjectAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainObject__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDomainObjectAccess().getDescriptionAssignment_4_2()); }
		(rule__DomainObject__DescriptionAssignment_4_2)
		{ after(grammarAccess.getDomainObjectAccess().getDescriptionAssignment_4_2()); }
	)
	(
		{ before(grammarAccess.getDomainObjectAccess().getDescriptionAssignment_4_2()); }
		(rule__DomainObject__DescriptionAssignment_4_2)*
		{ after(grammarAccess.getDomainObjectAccess().getDescriptionAssignment_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entities__ActorAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitiesAccess().getActorActorParserRuleCall_0_0_0()); }
		ruleActor
		{ after(grammarAccess.getEntitiesAccess().getActorActorParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__SystemAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitiesAccess().getSystemSystemParserRuleCall_0_1_0()); }
		ruleSystem
		{ after(grammarAccess.getEntitiesAccess().getSystemSystemParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__RequirementAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitiesAccess().getRequirementRequirementParserRuleCall_0_2_0()); }
		ruleRequirement
		{ after(grammarAccess.getEntitiesAccess().getRequirementRequirementParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entities__GlossaryAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitiesAccess().getGlossaryGlossaryParserRuleCall_1_0()); }
		ruleGlossary
		{ after(grammarAccess.getEntitiesAccess().getGlossaryGlossaryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getNameTextParserRuleCall_2_0()); }
		ruleText
		{ after(grammarAccess.getActorAccess().getNameTextParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actor__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getActorAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getNameTextParserRuleCall_2_0()); }
		ruleText
		{ after(grammarAccess.getSystemAccess().getNameTextParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__System__DescriptionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
		ruleDescription
		{ after(grammarAccess.getSystemAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__TextAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getTextSentenceWithReferencesParserRuleCall_2_0()); }
		ruleSentenceWithReferences
		{ after(grammarAccess.getDescriptionAccess().getTextSentenceWithReferencesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceWithReferences__TextWithReferencesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceWithReferencesAccess().getTextWithReferencesTextWithReferencesParserRuleCall_0_0()); }
		ruleTextWithReferences
		{ after(grammarAccess.getSentenceWithReferencesAccess().getTextWithReferencesTextWithReferencesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SentenceWithReferences__PunctuationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSentenceWithReferencesAccess().getPunctuationAlternatives_1_0()); }
		(rule__SentenceWithReferences__PunctuationAlternatives_1_0)
		{ after(grammarAccess.getSentenceWithReferencesAccess().getPunctuationAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__OnlyRefsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getOnlyRefsEntitiesCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTextWithReferencesAccess().getOnlyRefsEntitiesSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getTextWithReferencesAccess().getOnlyRefsEntitiesSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTextWithReferencesAccess().getOnlyRefsEntitiesCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__RefBeforeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getRefBeforeEntitiesCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getTextWithReferencesAccess().getRefBeforeEntitiesSTRINGTerminalRuleCall_1_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getTextWithReferencesAccess().getRefBeforeEntitiesSTRINGTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getTextWithReferencesAccess().getRefBeforeEntitiesCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__TextAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getTextTextParserRuleCall_1_1_0()); }
		ruleText
		{ after(grammarAccess.getTextWithReferencesAccess().getTextTextParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__AfterAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getAfterReferenceCombinationParserRuleCall_1_2_0()); }
		ruleReferenceCombination
		{ after(grammarAccess.getTextWithReferencesAccess().getAfterReferenceCombinationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithReferences__FinalRefAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithReferencesAccess().getFinalRefEntitiesCrossReference_1_3_0()); }
		(
			{ before(grammarAccess.getTextWithReferencesAccess().getFinalRefEntitiesSTRINGTerminalRuleCall_1_3_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getTextWithReferencesAccess().getFinalRefEntitiesSTRINGTerminalRuleCall_1_3_0_1()); }
		)
		{ after(grammarAccess.getTextWithReferencesAccess().getFinalRefEntitiesCrossReference_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCombination__RefsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceCombinationAccess().getRefsEntitiesCrossReference_0_0()); }
		(
			{ before(grammarAccess.getReferenceCombinationAccess().getRefsEntitiesSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getReferenceCombinationAccess().getRefsEntitiesSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getReferenceCombinationAccess().getRefsEntitiesCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceCombination__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceCombinationAccess().getTextTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getReferenceCombinationAccess().getTextTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRequirementAccess().getConditionPreconditionParserRuleCall_0_0()); }
		rulePrecondition
		{ after(grammarAccess.getConditionalRequirementAccess().getConditionPreconditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__SystemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRequirementAccess().getSystemSystemCrossReference_1_0()); }
		(
			{ before(grammarAccess.getConditionalRequirementAccess().getSystemSystemSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getConditionalRequirementAccess().getSystemSystemSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getConditionalRequirementAccess().getSystemSystemCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__LiabilityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRequirementAccess().getLiabilityLiabilityEnumRuleCall_2_0()); }
		ruleLiability
		{ after(grammarAccess.getConditionalRequirementAccess().getLiabilityLiabilityEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRequirement__EndAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRequirementAccess().getEndRequirementEndParserRuleCall_3_0()); }
		ruleRequirementEnd
		{ after(grammarAccess.getConditionalRequirementAccess().getEndRequirementEndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__TheAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconditionalRequirementAccess().getTheTheKeyword_0_0()); }
		(
			{ before(grammarAccess.getUnconditionalRequirementAccess().getTheTheKeyword_0_0()); }
			'The'
			{ after(grammarAccess.getUnconditionalRequirementAccess().getTheTheKeyword_0_0()); }
		)
		{ after(grammarAccess.getUnconditionalRequirementAccess().getTheTheKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__SystemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconditionalRequirementAccess().getSystemSystemCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUnconditionalRequirementAccess().getSystemSystemSTRINGTerminalRuleCall_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getUnconditionalRequirementAccess().getSystemSystemSTRINGTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUnconditionalRequirementAccess().getSystemSystemCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__LiabilityAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconditionalRequirementAccess().getLiabilityLiabilityEnumRuleCall_2_0()); }
		ruleLiability
		{ after(grammarAccess.getUnconditionalRequirementAccess().getLiabilityLiabilityEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnconditionalRequirement__EndAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnconditionalRequirementAccess().getEndRequirementEndParserRuleCall_3_0()); }
		ruleRequirementEnd
		{ after(grammarAccess.getUnconditionalRequirementAccess().getEndRequirementEndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__ConditionalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getConditionalConditionalParserRuleCall_0_0()); }
		ruleConditional
		{ after(grammarAccess.getPreconditionAccess().getConditionalConditionalParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precondition__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreconditionAccess().getConditionTextWithReferencesParserRuleCall_1_0()); }
		ruleTextWithReferences
		{ after(grammarAccess.getPreconditionAccess().getConditionTextWithReferencesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__ProvideAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getProvideProvideKeyword_0_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getProvideProvideKeyword_0_0()); }
			'provide'
			{ after(grammarAccess.getActorInteractionAccess().getProvideProvideKeyword_0_0()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getProvideProvideKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__The1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getThe1TheKeyword_1_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getThe1TheKeyword_1_0()); }
			'the'
			{ after(grammarAccess.getActorInteractionAccess().getThe1TheKeyword_1_0()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getThe1TheKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__ActorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getActorActorCrossReference_2_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getActorActorSTRINGTerminalRuleCall_2_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getActorInteractionAccess().getActorActorSTRINGTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getActorActorCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__WithAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getWithWithKeyword_3_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getWithWithKeyword_3_0()); }
			'with'
			{ after(grammarAccess.getActorInteractionAccess().getWithWithKeyword_3_0()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getWithWithKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__The2Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getThe2TheKeyword_4_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getThe2TheKeyword_4_0()); }
			'the'
			{ after(grammarAccess.getActorInteractionAccess().getThe2TheKeyword_4_0()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getThe2TheKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__AbilityAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getAbilityAbilityKeyword_5_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getAbilityAbilityKeyword_5_0()); }
			'ability'
			{ after(grammarAccess.getActorInteractionAccess().getAbilityAbilityKeyword_5_0()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getAbilityAbilityKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorInteraction__ToAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorInteractionAccess().getToToKeyword_6_0()); }
		(
			{ before(grammarAccess.getActorInteractionAccess().getToToKeyword_6_0()); }
			'to'
			{ after(grammarAccess.getActorInteractionAccess().getToToKeyword_6_0()); }
		)
		{ after(grammarAccess.getActorInteractionAccess().getToToKeyword_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__AiAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementEndAccess().getAiActorInteractionParserRuleCall_0_0()); }
		ruleActorInteraction
		{ after(grammarAccess.getRequirementEndAccess().getAiActorInteractionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementEnd__ObjectWithDetailsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequirementEndAccess().getObjectWithDetailsTextWithConceptsOrSynonymsParserRuleCall_1_0()); }
		ruleTextWithConceptsOrSynonyms
		{ after(grammarAccess.getRequirementEndAccess().getObjectWithDetailsTextWithConceptsOrSynonymsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__OnlyRefsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsConceptOrSynonymCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsConceptOrSynonymSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsConceptOrSynonymSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getOnlyRefsConceptOrSynonymCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__RefBeforeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getRefBeforeConceptOrSynonymCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getRefBeforeConceptOrSynonymSTRINGTerminalRuleCall_1_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getRefBeforeConceptOrSynonymSTRINGTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getRefBeforeConceptOrSynonymCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__TextAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getTextTextParserRuleCall_1_1_0()); }
		ruleText
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getTextTextParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__AfterAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getAfterConceptCombinationParserRuleCall_1_2_0()); }
		ruleConceptCombination
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getAfterConceptCombinationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextWithConceptsOrSynonyms__FinalRefAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getFinalRefConceptOrSynonymCrossReference_1_3_0()); }
		(
			{ before(grammarAccess.getTextWithConceptsOrSynonymsAccess().getFinalRefConceptOrSynonymSTRINGTerminalRuleCall_1_3_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getFinalRefConceptOrSynonymSTRINGTerminalRuleCall_1_3_0_1()); }
		)
		{ after(grammarAccess.getTextWithConceptsOrSynonymsAccess().getFinalRefConceptOrSynonymCrossReference_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConceptCombination__ConceptsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConceptCombinationAccess().getConceptsConceptOrSynonymCrossReference_0_0()); }
		(
			{ before(grammarAccess.getConceptCombinationAccess().getConceptsConceptOrSynonymSTRINGTerminalRuleCall_0_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getConceptCombinationAccess().getConceptsConceptOrSynonymSTRINGTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getConceptCombinationAccess().getConceptsConceptOrSynonymCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConceptCombination__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConceptCombinationAccess().getTextTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getConceptCombinationAccess().getTextTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Glossary__ConceptsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlossaryAccess().getConceptsConceptParserRuleCall_2_0()); }
		ruleConcept
		{ after(grammarAccess.getGlossaryAccess().getConceptsConceptParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameTextParserRuleCall_2_0()); }
		ruleText
		{ after(grammarAccess.getFunctionAccess().getNameTextParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SynonymsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSynonymsFunctionSynonymParserRuleCall_3_2_0()); }
		ruleFunctionSynonym
		{ after(grammarAccess.getFunctionAccess().getSynonymsFunctionSynonymParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SynonymsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSynonymsFunctionSynonymParserRuleCall_3_3_1_0()); }
		ruleFunctionSynonym
		{ after(grammarAccess.getFunctionAccess().getSynonymsFunctionSynonymParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DescriptionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getDescriptionSentenceWithReferencesParserRuleCall_4_2_0()); }
		ruleSentenceWithReferences
		{ after(grammarAccess.getFunctionAccess().getDescriptionSentenceWithReferencesParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainObjectAccess().getNameTextParserRuleCall_2_0()); }
		ruleText
		{ after(grammarAccess.getDomainObjectAccess().getNameTextParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__SynonymsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainObjectAccess().getSynonymsDomainObjectSynonymParserRuleCall_3_2_0()); }
		ruleDomainObjectSynonym
		{ after(grammarAccess.getDomainObjectAccess().getSynonymsDomainObjectSynonymParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__SynonymsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainObjectAccess().getSynonymsDomainObjectSynonymParserRuleCall_3_3_1_0()); }
		ruleDomainObjectSynonym
		{ after(grammarAccess.getDomainObjectAccess().getSynonymsDomainObjectSynonymParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObject__DescriptionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainObjectAccess().getDescriptionSentenceWithReferencesParserRuleCall_4_2_0()); }
		ruleSentenceWithReferences
		{ after(grammarAccess.getDomainObjectAccess().getDescriptionSentenceWithReferencesParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionSynonym__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionSynonymAccess().getNameTextParserRuleCall_0()); }
		ruleText
		{ after(grammarAccess.getFunctionSynonymAccess().getNameTextParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainObjectSynonym__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainObjectSynonymAccess().getNameTextParserRuleCall_0()); }
		ruleText
		{ after(grammarAccess.getDomainObjectSynonymAccess().getNameTextParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_WORD : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'-'|'_')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
