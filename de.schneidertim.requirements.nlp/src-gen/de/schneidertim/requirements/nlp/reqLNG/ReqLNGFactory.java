/**
 * generated by Xtext 2.10.0
 */
package de.schneidertim.requirements.nlp.reqLNG;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage
 * @generated
 */
public interface ReqLNGFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ReqLNGFactory eINSTANCE = de.schneidertim.requirements.nlp.reqLNG.impl.ReqLNGFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Requirement Document</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Requirement Document</em>'.
   * @generated
   */
  RequirementDocument createRequirementDocument();

  /**
   * Returns a new object of class '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Entity</em>'.
   * @generated
   */
  Entity createEntity();

  /**
   * Returns a new object of class '<em>Actor</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Actor</em>'.
   * @generated
   */
  Actor createActor();

  /**
   * Returns a new object of class '<em>System</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>System</em>'.
   * @generated
   */
  System createSystem();

  /**
   * Returns a new object of class '<em>Description</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Description</em>'.
   * @generated
   */
  Description createDescription();

  /**
   * Returns a new object of class '<em>Sentence With References</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sentence With References</em>'.
   * @generated
   */
  SentenceWithReferences createSentenceWithReferences();

  /**
   * Returns a new object of class '<em>Text With References</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Text With References</em>'.
   * @generated
   */
  TextWithReferences createTextWithReferences();

  /**
   * Returns a new object of class '<em>Reference Combination</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Reference Combination</em>'.
   * @generated
   */
  ReferenceCombination createReferenceCombination();

  /**
   * Returns a new object of class '<em>Requirement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Requirement</em>'.
   * @generated
   */
  Requirement createRequirement();

  /**
   * Returns a new object of class '<em>Conditional Requirement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conditional Requirement</em>'.
   * @generated
   */
  ConditionalRequirement createConditionalRequirement();

  /**
   * Returns a new object of class '<em>Unconditional Requirement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Unconditional Requirement</em>'.
   * @generated
   */
  UnconditionalRequirement createUnconditionalRequirement();

  /**
   * Returns a new object of class '<em>Precondition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Precondition</em>'.
   * @generated
   */
  Precondition createPrecondition();

  /**
   * Returns a new object of class '<em>Actor Interaction</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Actor Interaction</em>'.
   * @generated
   */
  ActorInteraction createActorInteraction();

  /**
   * Returns a new object of class '<em>Requirement End</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Requirement End</em>'.
   * @generated
   */
  RequirementEnd createRequirementEnd();

  /**
   * Returns a new object of class '<em>Text With Concepts Or Synonyms</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Text With Concepts Or Synonyms</em>'.
   * @generated
   */
  TextWithConceptsOrSynonyms createTextWithConceptsOrSynonyms();

  /**
   * Returns a new object of class '<em>Concept Combination</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Concept Combination</em>'.
   * @generated
   */
  ConceptCombination createConceptCombination();

  /**
   * Returns a new object of class '<em>Glossary</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Glossary</em>'.
   * @generated
   */
  Glossary createGlossary();

  /**
   * Returns a new object of class '<em>Concept Or Synonym</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Concept Or Synonym</em>'.
   * @generated
   */
  ConceptOrSynonym createConceptOrSynonym();

  /**
   * Returns a new object of class '<em>Function</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Function</em>'.
   * @generated
   */
  Function createFunction();

  /**
   * Returns a new object of class '<em>Domain Object</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Domain Object</em>'.
   * @generated
   */
  DomainObject createDomainObject();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ReqLNGPackage getReqLNGPackage();

} //ReqLNGFactory
