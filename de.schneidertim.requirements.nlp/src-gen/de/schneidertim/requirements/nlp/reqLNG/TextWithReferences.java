/**
 * generated by Xtext 2.10.0
 */
package de.schneidertim.requirements.nlp.reqLNG;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Text With References</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.schneidertim.requirements.nlp.reqLNG.TextWithReferences#getOnlyRefs <em>Only Refs</em>}</li>
 *   <li>{@link de.schneidertim.requirements.nlp.reqLNG.TextWithReferences#getRefBefore <em>Ref Before</em>}</li>
 *   <li>{@link de.schneidertim.requirements.nlp.reqLNG.TextWithReferences#getText <em>Text</em>}</li>
 *   <li>{@link de.schneidertim.requirements.nlp.reqLNG.TextWithReferences#getAfter <em>After</em>}</li>
 *   <li>{@link de.schneidertim.requirements.nlp.reqLNG.TextWithReferences#getFinalRef <em>Final Ref</em>}</li>
 * </ul>
 *
 * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage#getTextWithReferences()
 * @model
 * @generated
 */
public interface TextWithReferences extends EObject
{
  /**
   * Returns the value of the '<em><b>Only Refs</b></em>' reference list.
   * The list contents are of type {@link de.schneidertim.requirements.nlp.reqLNG.Entities}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Only Refs</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Only Refs</em>' reference list.
   * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage#getTextWithReferences_OnlyRefs()
   * @model
   * @generated
   */
  EList<Entities> getOnlyRefs();

  /**
   * Returns the value of the '<em><b>Ref Before</b></em>' reference list.
   * The list contents are of type {@link de.schneidertim.requirements.nlp.reqLNG.Entities}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Ref Before</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Ref Before</em>' reference list.
   * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage#getTextWithReferences_RefBefore()
   * @model
   * @generated
   */
  EList<Entities> getRefBefore();

  /**
   * Returns the value of the '<em><b>Text</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Text</em>' attribute list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Text</em>' attribute list.
   * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage#getTextWithReferences_Text()
   * @model unique="false"
   * @generated
   */
  EList<String> getText();

  /**
   * Returns the value of the '<em><b>After</b></em>' containment reference list.
   * The list contents are of type {@link de.schneidertim.requirements.nlp.reqLNG.ReferenceCombination}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>After</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>After</em>' containment reference list.
   * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage#getTextWithReferences_After()
   * @model containment="true"
   * @generated
   */
  EList<ReferenceCombination> getAfter();

  /**
   * Returns the value of the '<em><b>Final Ref</b></em>' reference list.
   * The list contents are of type {@link de.schneidertim.requirements.nlp.reqLNG.Entities}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Final Ref</em>' reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Final Ref</em>' reference list.
   * @see de.schneidertim.requirements.nlp.reqLNG.ReqLNGPackage#getTextWithReferences_FinalRef()
   * @model
   * @generated
   */
  EList<Entities> getFinalRef();

} // TextWithReferences
